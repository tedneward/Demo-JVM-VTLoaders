/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example.app;

import java.io.File;
import java.lang.reflect.Method;
import java.net.URI;
import java.net.URL;
import java.net.URLClassLoader;

public class App {
    public static void main(String[] args) {
        new App().run(args);
    }

    public int count = 0;

    public void run(String[] args) {
        File curdir = new File(".");
        System.out.println("Current directory is " + curdir.getAbsolutePath());

        for (int i=0; i < 10; i++) {
            //File compOneJAR = new File("../component_one/build/libs/component_one.jar");
            //System.out.println("ComponentOne is " + compOneJAR.getAbsolutePath());
            runComponent("component_one");
    
            //File compTwoJAR = new File("../component_one/build/libs/component_two.jar");
            //System.out.println("ComponentTwo is " + compTwoJAR.getAbsolutePath());
            runComponent("component_two");    
        }

        try { Thread.sleep(5 * 1000); } catch (Exception x) { x.printStackTrace(); }
    }

    public void runComponent(String comp) {
        Thread.ofVirtual().name("V" + (++count)).start( () -> {
            //System.out.println("Running on thread " + Thread.currentThread().getName());
            String url = "jar:file:../" + comp + "/build/libs/" + comp + ".jar!/";
            //System.out.println("Running component " + comp + " from " + url);
            try(URLClassLoader ucl = new URLClassLoader(new URL[] { new URI(url).toURL() }, null) ) {
                Class<?> cls = ucl.loadClass("org.example." + comp + ".Thing");
                Object obj = cls.getConstructor().newInstance();
                Method doIt = cls.getDeclaredMethod("doIt");
                doIt.invoke(obj);
            }
            catch (Exception ex) {
                ex.printStackTrace();
            }
        });
    }
}
